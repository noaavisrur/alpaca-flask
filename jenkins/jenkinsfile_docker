pipeline {
    agent any

    environment {
        // Initialize the initial version tag
        versionTag = '1.0'
        previousTag = ''
        repositoryName = 'alpaca-flask'
        dockerHubUsername = 'noaavisrur'
        newTag = ''
        currentTag = ''
        test_server = '174.129.170.89' 
        prod_server = ' '
    }

    stages {
        stage('Clean up & clone') {
            steps {
                sh 'sudo rm -rf *'
                sh 'git clone https://github.com/noaavisrur/alpaca-flask.git'
            }
        }
        
        stage('Build and Push Docker Image') {
            steps {
                dir('alpaca-flask/flask/flask-app') {
                    sh "docker build -t ${dockerHubUsername}/${repositoryName}:latest ."
                    sh "docker push ${dockerHubUsername}/${repositoryName}:latest"
                }
            }
        }
     stage('Deploy Docker into EC2 Test-Servers') {
    steps {
        // Configure AWS credentials
        withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'noaavisrur']]) {
            // Install AWS CLI (if not already installed)
            sh 'pip install awscli --upgrade --user'
            // Start EC2 instance
            sh 'aws ec2 start-instances --instance-ids i-0cfdbf11a0eef79f0 --region us-east-1'
             sshagent(['noaavisrurssh']) {
              script {
                  def sshCommand = "ssh -i ${env.ssh_key} -o StrictHostKeyChecking=no ec2-user@${env.test_server}"
                            sh """
                                ${sshCommand} sudo dnf update -y
                                ${sshCommand} sudo dnf install docker -y
                                ${sshCommand} sudo service docker start
                                ${sshCommand} sudo systemctl start docker
                                ${sshCommand} sudo usermod -a -G docker ec2-user
                                ${sshCommand} docker stop my-container
                                ${sshCommand} docker rm my-container
                                ${sshCommand} docker run -d -p 5000:5000 --rm --name my-container noaavisrur/alpaca-flask:latest  
                            """
                }
         }
        }
    }
}

    }
}
